// <auto-generated />
using System;
using ApiPizzaria.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace ApiPizzaria.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20231004003426_CreateSchemaPizzaria")]
    partial class CreateSchemaPizzaria
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("ApiPizzaria.Model.Domain.CarrinhoPedido", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    b.Property<int>("Quantidade")
                        .HasColumnType("int")
                        .HasColumnName("quantidade");

                    b.Property<int>("SituacaoCarrinho")
                        .HasColumnType("int")
                        .HasColumnName("situacao_carrinho");

                    b.Property<double>("ValorDescontoCarrinho")
                        .HasColumnType("double")
                        .HasColumnName("valor_desconto_carrinho");

                    b.Property<double>("ValorProdutoCarrinho")
                        .HasColumnType("double")
                        .HasColumnName("valor_produto_carrinho");

                    b.HasKey("Id")
                        .HasName("pk_carrinho_pedido");

                    b.ToTable("carrinho_pedido", (string)null);
                });

            modelBuilder.Entity("ApiPizzaria.Model.Domain.Categoria", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("descricao");

                    b.Property<string>("NomeCategoria")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("nome_categoria");

                    b.Property<int>("SituacaoCategoria")
                        .HasColumnType("int")
                        .HasColumnName("situacao_categoria");

                    b.HasKey("Id")
                        .HasName("pk_categoria");

                    b.ToTable("categoria", (string)null);
                });

            modelBuilder.Entity("ApiPizzaria.Model.Domain.Produto", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    b.Property<int?>("CarrinhoPedidoId")
                        .HasColumnType("int")
                        .HasColumnName("carrinho_pedido_id");

                    b.Property<int>("CategoriaId")
                        .HasColumnType("int")
                        .HasColumnName("categoria_id");

                    b.Property<string>("Descriscao")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("descriscao");

                    b.Property<string>("Imagem")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("imagem");

                    b.Property<int>("SubCategoriaId")
                        .HasColumnType("int")
                        .HasColumnName("sub_categoria_id");

                    b.Property<double>("ValorProduto")
                        .HasColumnType("double")
                        .HasColumnName("valor_produto");

                    b.HasKey("Id")
                        .HasName("pk_produto");

                    b.HasIndex("CarrinhoPedidoId")
                        .HasDatabaseName("ix_produto_carrinho_pedido_id");

                    b.HasIndex("CategoriaId")
                        .HasDatabaseName("ix_produto_categoria_id");

                    b.HasIndex("SubCategoriaId")
                        .HasDatabaseName("ix_produto_sub_categoria_id");

                    b.ToTable("produto", (string)null);
                });

            modelBuilder.Entity("ApiPizzaria.Model.Domain.SubCategoria", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    b.Property<int>("CategoriaId")
                        .HasColumnType("int")
                        .HasColumnName("categoria_id");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("descricao");

                    b.Property<string>("NomeSubCategoria")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("nome_sub_categoria");

                    b.Property<int>("SituacaoSubCategoria")
                        .HasColumnType("int")
                        .HasColumnName("situacao_sub_categoria");

                    b.HasKey("Id")
                        .HasName("pk_sub_categorias");

                    b.HasIndex("CategoriaId")
                        .HasDatabaseName("ix_sub_categorias_categoria_id");

                    b.ToTable("sub_categorias", (string)null);
                });

            modelBuilder.Entity("ApiPizzaria.Model.Domain.Usuario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    b.Property<string>("CPF")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("cpf");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("email");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("password");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("username");

                    b.HasKey("Id")
                        .HasName("pk_usuario");

                    b.ToTable("usuario", (string)null);
                });

            modelBuilder.Entity("ApiPizzaria.Model.Domain.Venda", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    b.Property<string>("CPF")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("cpf");

                    b.Property<double>("PrecoVenda")
                        .HasColumnType("double")
                        .HasColumnName("preco_venda");

                    b.Property<int>("ProdutoId")
                        .HasColumnType("int")
                        .HasColumnName("produto_id");

                    b.Property<double>("PromocaoVenda")
                        .HasColumnType("double")
                        .HasColumnName("promocao_venda");

                    b.Property<int>("Situacao")
                        .HasColumnType("int")
                        .HasColumnName("situacao");

                    b.HasKey("Id")
                        .HasName("pk_venda");

                    b.HasIndex("ProdutoId")
                        .HasDatabaseName("ix_venda_produto_id");

                    b.ToTable("venda", (string)null);
                });

            modelBuilder.Entity("Estoque", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    b.Property<int>("ProdutoId")
                        .HasColumnType("int")
                        .HasColumnName("produto_id");

                    b.Property<int>("QuantidadeEstoque")
                        .HasColumnType("int")
                        .HasColumnName("quantidade_estoque");

                    b.HasKey("Id")
                        .HasName("pk_estoque");

                    b.HasIndex("ProdutoId")
                        .HasDatabaseName("ix_estoque_produto_id");

                    b.ToTable("estoque", (string)null);
                });

            modelBuilder.Entity("ApiPizzaria.Model.Domain.Produto", b =>
                {
                    b.HasOne("ApiPizzaria.Model.Domain.CarrinhoPedido", null)
                        .WithMany("ProdutoCarrinho")
                        .HasForeignKey("CarrinhoPedidoId")
                        .HasConstraintName("fk_produto_carrinho_pedido_carrinho_pedido_id");

                    b.HasOne("ApiPizzaria.Model.Domain.Categoria", "Categoria")
                        .WithMany()
                        .HasForeignKey("CategoriaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_produto_categoria_categoria_id");

                    b.HasOne("ApiPizzaria.Model.Domain.SubCategoria", "SubCategoria")
                        .WithMany()
                        .HasForeignKey("SubCategoriaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_produto_sub_categorias_sub_categoria_id");

                    b.Navigation("Categoria");

                    b.Navigation("SubCategoria");
                });

            modelBuilder.Entity("ApiPizzaria.Model.Domain.SubCategoria", b =>
                {
                    b.HasOne("ApiPizzaria.Model.Domain.Categoria", "Categoria")
                        .WithMany()
                        .HasForeignKey("CategoriaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_sub_categorias_categoria_categoria_id");

                    b.Navigation("Categoria");
                });

            modelBuilder.Entity("ApiPizzaria.Model.Domain.Venda", b =>
                {
                    b.HasOne("ApiPizzaria.Model.Domain.Produto", "Produto")
                        .WithMany()
                        .HasForeignKey("ProdutoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_venda_produto_produto_id");

                    b.Navigation("Produto");
                });

            modelBuilder.Entity("Estoque", b =>
                {
                    b.HasOne("ApiPizzaria.Model.Domain.Produto", "Produto")
                        .WithMany()
                        .HasForeignKey("ProdutoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_estoque_produto_produto_id");

                    b.Navigation("Produto");
                });

            modelBuilder.Entity("ApiPizzaria.Model.Domain.CarrinhoPedido", b =>
                {
                    b.Navigation("ProdutoCarrinho");
                });
#pragma warning restore 612, 618
        }
    }
}
